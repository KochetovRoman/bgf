{"version":3,"sources":["components/dashboard/sider/SiderBlock.jsx","redux/mainPage/handlers.js","redux/mainPage/index.js","redux/filterPage/handlers.js","redux/filterPage/index.js","redux/industryPage/handlers.js","redux/industryPage/index.js","components/dashboard/mainPage/map/Legend/NewLabel.js","components/dashboard/mainPage/map/Map/Map.jsx","components/dashboard/filterPage/charts/config.js","components/dashboard/filterPage/charts/BaseLineChart.jsx","components/dashboard/filterPage/TableCard/TableCard.jsx","components/checkbox/Checkbox.jsx","components/dashboard/filterPage/filterBlock/FilterButton.jsx","api/index.js","api/filters.js","components/dashboard/filterPage/filterBlock/FilterBlock.jsx","components/dashboard/mainPage/charts/CircleChart/ChartWithLegend/config.js","components/dashboard/mainPage/charts/CircleChart/ChartWithLegend/CircleChartWithLegend.js","components/dashboard/mainPage/charts/LineChart/LineChart.js","components/dashboard/mainPage/table/TableBlock.jsx","components/dashboard/industryPage/industryFilterBlock/industryFilter.jsx","utils/dataForRequestFilter.js","components/dashboard/ConditionPage.jsx","utils/transformDataForLineCharts.js","components/dashboard/MainPage.jsx","components/App.jsx","reportWebVitals.js","redux/mainPage/sagas.js","redux/filterPage/sagas.js","redux/industryPage/sagas.js","redux/sagas.js","redux/reducers.js","redux/configureStore.js","index.js"],"names":["menuItems","href","Icon","BlockOutlined","className","BarChartOutlined","FunnelPlotOutlined","Sider","Layout","withRouter","location","useLocation","width","mode","defaultSelectedKeys","pathname","style","height","borderRight","backgroundColor","map","menuItem","Item","to","initialState","mapData","mapDataLoading","mapDataerror","selectedArea","filteredData","filteredDataLoading","filteredDataError","filters","filtersLoading","filtersError","colors","colorsLoading","colorsError","diagrams","diagramsLoading","diagramsError","actions","createActions","GET_FILTERS_REQUEST","undefined","GET_FILTERS_SUCCESS","GET_FILTERS_FAILURE","GET_GRAPH_REQUEST","GET_GRAPH_SUCCESS","GET_GRAPH_FAILURE","GET_FILTERED_GRAPH_REQUEST","GET_FILTERED_GRAPH_SUCCESS","GET_FILTERED_GRAPH_FAILURE","SET_AREA_REQUEST","SET_AREA_SUCCESS","SET_AREA_FAILURE","GET_COLORS_REQUEST","GET_COLORS_SUCCESS","GET_COLORS_FAILURE","GET_DIAGRAMS_REQUEST","GET_DIAGRAMS_SUCCESS","GET_DIAGRAMS_FAILURE","reducer","handleActions","Map","getFiltersRequest","state","getFiltersSuccess","payload","result","getFiltersFailure","getGraphRequest","mapDataError","getGraphSuccess","getGraphFailure","getFilteredGraphRequest","getFilteredGraphSuccess","getFilteredGraphFailure","setAreaRequest","setAreaSuccess","setAreaFailure","getColorsRequest","getColorsSuccess","getColorsFailure","getDiagramsRequest","getDiagramsSuccess","getDiagramsFailure","isAgeFilterOpen","isSexFilterOpen","isDiagnosisFilterOpen","isAgeButtonDisabled","isSexButtonDisabled","isDiagnosisButtonDisabled","isAgeButtonStyled","isSexButtonStyled","isDiagnosisButtonStyled","ageFilter","genderFilter","diagnoseFilter","filterButtons","id","buttonName","icon","FilterOutlined","options","filter","checked","optionsOpen","DownloadOutlined","OPEN_AGE_FILTER","DISABLE_AGE_BUTTON","OPEN_SEX_FILTER","DISABLE_SEX_BUTTON","OPEN_DIAGNOSIS_FILTER","DISABLE_DIAGNOSIS_BUTTON","SET_FILTER_REQUEST","SET_FILTER_SUCCESS","RESET_FILTER_REQUEST","RESET_FILTER_SUCCESS","APPLY_FILTER_DATA_REQUEST","APPLY_FILTER_DATA_SUCCESS","APPLY_FILTER_DATA_FAILURE","GENERATE_PDF_REQUEST","GENERATE_PDF_SUCCESS","GENERATE_PDF_FAILURE","openAgeFilter","openFilter","buttonStyled","disableAgeButton","openSexFilter","disableSexButton","openDiagnosisFilter","isDiagnosisFilterStyled","disableDiagnosisButton","setFilterRequest","setFilterSuccess","resetFilterRequest","resetFilterSuccess","applyFilterDataRequest","applyFilterDataSuccess","ageArr","genderArr","applyFilterDataFailure","generatePdfRequest","generatePdfSuccess","generatePdfFailure","industry","industries","industriesLoading","industriesError","group","groups","groupsLoading","groupsError","GET_INDUSTRIES_REQUEST","GET_INDUSTRIES_SUCCESS","GET_INDUSTRIES_FAILURE","GET_GROUPS_REQUEST","GET_GROUPS_SUCCESS","GET_GROUPS_FAILURE","SET_INDUSTRY","SET_GROUP","getIndustriesRequest","getIndustriesSuccess","industryGroup","getIndustriesFailure","getGroupsRequest","getGroupsSuccess","getGroupsFailure","setIndustry","setGroup","numStyle","color","NewLegend","newArr","arr","keys","Object","sort","a","b","item","i","length","float","getStyle","Option","Select","gradient","3.25","3.5","3.75","4","4.25","4.5","4.75","5","5.25","5.5","5.75","6.5","areaArray","Düren","Euskirchen","Heinsberg","Aachen","Cleves","Wesel","Mettmann","Viersen","props","dispatch","useDispatch","geoJson","useRef","useState","selectedFeature","setSelectedFeature","previousFeature","value","ref","useEffect","current","usePrevious","useSelector","mainPage","areas","setArea","setStyle","weight","closePopup","currentArea","mainPageActions","layer","getLayers","find","_popup","_content","bringToFront","openPopup","areaList","area","onChange","size","MapContainer","center","zoom","GeoJSON","fillColor","fillOpacity","data","germanyDis","onEachFeature","areaName","properties","NAME_3","getOwnPropertyNames","some","val","bindPopup","on","click","event","target","testN","getData","dv","DataSet","View","source","year","menValue","womenValue","parseChartData","transform","type","fields","key","rows","scale","dataKey","BaseLineChart","padding","forceFit","position","TableCard","tableTitle","chartData","tableUI","sex","Math","round","yearList","Checkbox","isChecked","label","withLine","setWomenFilter","bottomLine","onClick","e","currentTarget","FilterButton","buttonStyle","isButtonDisabled","setFilterOpen","isFilterOpen","applyFilter","clearFilter","filterId","setCheckedCheckbox","filterList","disabled","http","axios","create","baseURL","getFilters","get","then","res","getDiagrams","getGraph","getFilteredGraph","post","getIndustryGroup","getFilteredIndustries","getMapColors","generatePdfFromUrl","method","url","responseType","FilterBlock","lineChartsData","window","search","filterPage","industryPage","isFilterPage","action","filterPageActions","tableList","title","filterButtonList","filterButton","response","URL","createObjectURL","document","createElement","download","generatePdf","createView","country","litres","field","dimension","as","CircleChartWithLegend","itemTpl","index","percent","toFixed","formatter","nice","callback","innerRadius","radius","clickable","showTitle","containerTpl","useHtml","reactive","this","React","Component","LineChart","marginTop","show","TableBlock","lineCharts","lastValue","prevValue","percentage","currentYear","CaretUpOutlined","fontSize","CaretDownOutlined","abs","IndustryFilter","industryPageActions","industryList","groupList","industryName","placeholder","dataForRequestFilter","forEach","push","filteredGraph","transformedData","obj","years","kpis","values","wholeArray","Number","Gesamt","prevYear","transformDataForLineCharts","Content","splitString","split","MainPage","history","useHistory","parsed","qs","parse","age","includes","gender","exact","path","component","ConditionPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getСolors","call","getFiltersData","put","types","getGraphData","getFilteredGraphData","getDiagramsData","mainPageSagas","takeEvery","setFilter","resetFilter","applyFilterData","getFilterButtons","getSelectedArea","select","newFilterButtons","y","option","diagnosesArr","region","ageRange","detail","basicObject","mainPageTypes","filterSagas","getIndustries","getGroups","filterData","industryPageSagas","root","all","filterPageSagas","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","createStoreWithMiddleware","applyMiddleware","createStore","store","composeWithDevTools","run","rootSaga","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a24010d1.chunk.js","sourcesContent":["import React from \"react\";\nimport {Layout, Menu,} from 'antd';\nimport {BarChartOutlined, BlockOutlined, FunnelPlotOutlined} from '@ant-design/icons';\nimport {NavLink} from \"react-router-dom\";\nimport './style.css'\nimport {useLocation, withRouter} from \"react-router\";\n\nconst menuItems = [\n    {\n        href: '/',\n        Icon: <BlockOutlined className='menuItem-icon' />,\n    },\n    {\n        href: '/filterPage',\n        Icon: <BarChartOutlined className='menuItem-icon' />,\n    },\n    {\n        href: '/industriesPage',\n        Icon: <FunnelPlotOutlined className='menuItem-icon' />,\n    },\n];\n\nconst {Sider} = Layout;\n\nconst SiderBlock = () => {\n    let location = useLocation()\n\n    return (\n        <Sider width={60} className=\"site-layout-background\">\n            <Menu\n                mode=\"inline\"\n                defaultSelectedKeys={[location.pathname]}\n                style={{height: '100%', borderRight: 0, backgroundColor: '#229954'}}\n            >\n                {menuItems.map(menuItem => (\n                    <Menu.Item className='menuItem' key={menuItem.href}>\n                        <NavLink to={menuItem.href}>\n                            {menuItem.Icon}\n                        </NavLink>\n                    </Menu.Item>\n                ))}\n            </Menu>\n        </Sider>\n\n    );\n}\n\n\nexport default withRouter(SiderBlock);\n","const initialState = {\n  mapData: null,\n  mapDataLoading: false,\n  mapDataerror: \"\",\n\n  selectedArea: \"Rheinland/HH\",\n\n  filteredData: null,\n  filteredDataLoading: false,\n  filteredDataError: \"\",\n\n  filters: null,\n  filtersLoading: false,\n  filtersError: \"\",\n\n  colors: null,\n  colorsLoading: false,\n  colorsError: \"\",\n\n  diagrams: null,\n  diagramsLoading: false,\n  diagramsError: \"\",\n};\n\nexport const getFiltersRequest = (state) => ({\n  ...state,\n  filtersError: initialState.filtersError,\n  filtersLoading: true,\n});\n\nexport const getFiltersSuccess = (state, { payload }) => ({\n  ...state,\n  filters: payload.result,\n  filtersLoading: false,\n});\n\nexport const getFiltersFailure = (state, { payload }) => ({\n  ...state,\n  filtersError: payload,\n  filtersLoading: false,\n});\n\nexport const getGraphRequest = (state) => ({\n  ...state,\n  mapDataError: initialState.mapDataError,\n  mapDataLoading: true,\n});\n\nexport const getGraphSuccess = (state, { payload }) => ({\n  ...state,\n  mapData: payload.result,\n\n  mapDataLoading: false,\n});\n\nexport const getGraphFailure = (state, { payload }) => ({\n  ...state,\n  mapDataError: payload,\n  mapDataLoading: false,\n});\n\nexport const getFilteredGraphRequest = (state) => ({\n  ...state,\n  filteredDataError: initialState.filteredDataError,\n  filteredDataLoading: true,\n});\n\nexport const getFilteredGraphSuccess = (state, { payload }) => ({\n  ...state,\n  filteredData: payload.result,\n  filteredDataLoading: false,\n});\n\nexport const getFilteredGraphFailure = (state, { payload }) => ({\n  ...state,\n  filteredDataError: payload,\n  filteredDataLoading: false,\n});\n\nexport const setAreaRequest = (state) => ({\n  ...state,\n});\n\nexport const setAreaSuccess = (state, { payload }) => ({\n  ...state,\n  selectedArea: payload,\n});\n\nexport const setAreaFailure = (state, { payload }) => ({\n  ...state,\n});\n\nexport const getColorsRequest = (state) => ({\n  ...state,\n  colorsError: initialState.colorsError,\n  colorsLoading: true,\n});\n\nexport const getColorsSuccess = (state, { payload }) => ({\n  ...state,\n  colors: payload.result,\n  colorsLoading: false,\n});\n\nexport const getColorsFailure = (state, { payload }) => ({\n  ...state,\n  colorsError: payload,\n  colorsLoading: false,\n});\n\nexport const getDiagramsRequest = (state) => ({\n  ...state,\n  diagramsError: initialState.diagramsError,\n  diagramsLoading: true,\n});\n\nexport const getDiagramsSuccess = (state, { payload }) => ({\n  ...state,\n  diagrams: payload.result,\n  diagramsLoading: false,\n});\n\nexport const getDiagramsFailure = (state, { payload }) => ({\n  ...state,\n  diagramsError: payload,\n  diagramsLoading: false,\n});\n\nexport default initialState;\n","import { handleActions, createActions } from \"redux-actions\";\n\nimport initialState, * as handlers from \"./handlers\";\n\nexport const actions = createActions({\n  GET_FILTERS_REQUEST: undefined,\n  GET_FILTERS_SUCCESS: undefined,\n  GET_FILTERS_FAILURE: undefined,\n\n  GET_GRAPH_REQUEST: undefined,\n  GET_GRAPH_SUCCESS: undefined,\n  GET_GRAPH_FAILURE: undefined,\n\n  GET_FILTERED_GRAPH_REQUEST: undefined,\n  GET_FILTERED_GRAPH_SUCCESS: undefined,\n  GET_FILTERED_GRAPH_FAILURE: undefined,\n\n  SET_AREA_REQUEST: undefined,\n  SET_AREA_SUCCESS: undefined,\n  SET_AREA_FAILURE: undefined,\n\n  GET_COLORS_REQUEST: undefined,\n  GET_COLORS_SUCCESS: undefined,\n  GET_COLORS_FAILURE: undefined,\n\n  GET_DIAGRAMS_REQUEST: undefined,\n  GET_DIAGRAMS_SUCCESS: undefined,\n  GET_DIAGRAMS_FAILURE: undefined,\n});\n\nconst reducer = handleActions(\n  new Map([\n    [actions.getFiltersRequest, handlers.getFiltersRequest],\n    [actions.getFiltersSuccess, handlers.getFiltersSuccess],\n    [actions.getFiltersFailure, handlers.getFiltersFailure],\n\n    [actions.getGraphRequest, handlers.getGraphRequest],\n    [actions.getGraphSuccess, handlers.getGraphSuccess],\n    [actions.getGraphFailure, handlers.getGraphFailure],\n\n    [actions.getFilteredGraphRequest, handlers.getFilteredGraphRequest],\n    [actions.getFilteredGraphSuccess, handlers.getFilteredGraphSuccess],\n    [actions.getFilteredGraphFailure, handlers.getFilteredGraphFailure],\n\n    [actions.setAreaRequest, handlers.setAreaRequest],\n    [actions.setAreaSuccess, handlers.setAreaSuccess],\n    [actions.setAreaFailure, handlers.setAreaFailure],\n\n    [actions.getColorsRequest, handlers.getColorsRequest],\n    [actions.getColorsSuccess, handlers.getColorsSuccess],\n    [actions.getColorsFailure, handlers.getColorsFailure],\n\n    [actions.getDiagramsRequest, handlers.getDiagramsRequest],\n    [actions.getDiagramsSuccess, handlers.getDiagramsSuccess],\n    [actions.getDiagramsFailure, handlers.getDiagramsFailure],\n  ]),\n  initialState\n);\n\nexport default reducer;\n","import { DownloadOutlined, FilterOutlined } from \"@ant-design/icons\";\n\nconst initialState = {\n  isAgeFilterOpen: false,\n  isSexFilterOpen: false,\n  isDiagnosisFilterOpen: false,\n\n  isAgeButtonDisabled: false,\n  isSexButtonDisabled: false,\n  isDiagnosisButtonDisabled: false,\n\n  isAgeButtonStyled: false,\n  isSexButtonStyled: false,\n  isDiagnosisButtonStyled: false,\n\n  ageFilter: [],\n  genderFilter: [],\n  diagnoseFilter: [],\n\n  filterButtons: [\n    {\n      id: \"1\",\n      buttonName: \"Altersgruppe\",\n      icon: <FilterOutlined />,\n      options: [\n        { id: \"1\", filter: \"0 - 19 Jahre\", checked: false },\n        { id: \"2\", filter: \"20 - 29 Jahre\", checked: false },\n        { id: \"3\", filter: \"30 - 39 Jahre\", checked: false },\n        { id: \"4\", filter: \"40 - 49 Jahre\", checked: false },\n        { id: \"5\", filter: \"50 - 59 Jahre\", checked: false },\n        { id: \"6\", filter: \"60 + Jahre\", checked: false },\n      ],\n      optionsOpen: false,\n    },\n    {\n      id: \"2\",\n      buttonName: \"Geschlecht\",\n      icon: <FilterOutlined />,\n      options: [\n        { id: \"7\", filter: \"Männlich\", checked: false },\n        { id: \"8\", filter: \"Weiblich\", checked: false },\n      ],\n      optionsOpen: false,\n    },\n    {\n      id: \"3\",\n      buttonName: \"Die Grunde\",\n      icon: <FilterOutlined />,\n      options: [\n        { id: \"9\", filter: \"Atemwege\", checked: false },\n        { id: \"10\", filter: \"Muskel/Skelett\", checked: false },\n        { id: \"11\", filter: \"Verdauung\", checked: false },\n        { id: \"12\", filter: \"Psychische Storungen\", checked: false },\n        { id: \"13\", filter: \"Infektionen\", checked: false },\n        { id: \"14\", filter: \"Nerven und Sinne\", checked: false },\n        { id: \"15\", filter: \"Sonstiges\", checked: false },\n        { id: \"16\", filter: \"Verletzungen\", checked: false },\n        { id: \"17\", filter: \"Herz Kreislauf\", checked: false },\n        { id: \"18\", filter: \"Neubildungen\", checked: false },\n        { id: \"19\", filter: \"Stoffwechsel\", checked: false },\n        { id: \"20\", filter: \"Haut\", checked: false },\n        { id: \"21\", filter: \"Urogenitalsystem\", checked: false },\n      ],\n      optionsOpen: false,\n    },\n    {\n      id: \"4\",\n      buttonName: \"\",\n      icon: <DownloadOutlined />,\n      options: [],\n      optionsOpen: false,\n    },\n  ],\n};\n\nexport const openAgeFilter = (state, { payload }) => ({\n  ...state,\n  isAgeFilterOpen: payload.openFilter,\n  isAgeButtonStyled: payload.buttonStyled,\n});\n\nexport const openSexFilter = (state, { payload }) => ({\n  ...state,\n  isSexFilterOpen: payload.openFilter,\n  isSexButtonStyled: payload.buttonStyled,\n});\n\nexport const openDiagnosisFilter = (state, { payload }) => ({\n  ...state,\n  isDiagnosisFilterOpen: payload.openFilter,\n  isDiagnosisFilterStyled: payload.buttonStyled,\n});\n\nexport const disableAgeButton = (state, { payload }) => ({\n  ...state,\n  isAgeButtonDisabled: payload,\n});\n\nexport const disableSexButton = (state, { payload }) => ({\n  ...state,\n  isSexButtonDisabled: payload,\n});\n\nexport const disableDiagnosisButton = (state, { payload }) => ({\n  ...state,\n  isDiagnosisButtonDisabled: payload,\n});\n\nexport const setFilterRequest = (state) => ({\n  ...state,\n});\n\nexport const resetFilterRequest = (state) => ({\n  ...state,\n});\n\nexport const setFilterSuccess = (state, { payload }) => ({\n  ...state,\n  filterButtons: payload,\n});\n\nexport const resetFilterSuccess = (state, { payload }) => ({\n  ...state,\n  filterButtons: payload,\n});\n\nexport const setWomenFilter = (state, { payload }) => ({\n  ...state,\n  chosenSexFilter: payload,\n});\n\nexport const applyFilterDataRequest = (state, { payload }) => ({\n  ...state,\n});\n\nexport const applyFilterDataSuccess = (state, { payload }) => ({\n  ...state,\n\n  ageFilter: payload.ageArr,\n  genderFilter: payload.genderArr,\n});\n\nexport const applyFilterDataFailure = (state, { payload }) => ({\n  ...state,\n});\n\nexport const generatePdfRequest = (state, { payload }) => ({\n  ...state,\n});\n\nexport const generatePdfSuccess = (state, { payload }) => ({\n  ...state,\n});\n\nexport const generatePdfFailure = (state, { payload }) => ({\n  ...state,\n});\n\nexport default initialState;\n","import { handleActions, createActions } from \"redux-actions\";\n\nimport initialState, * as handlers from \"./handlers\";\n\nexport const actions = createActions({\n  OPEN_AGE_FILTER: undefined,\n  DISABLE_AGE_BUTTON: undefined,\n\n  OPEN_SEX_FILTER: undefined,\n  DISABLE_SEX_BUTTON: undefined,\n\n  OPEN_DIAGNOSIS_FILTER: undefined,\n  DISABLE_DIAGNOSIS_BUTTON: undefined,\n\n  SET_FILTER_REQUEST: undefined,\n  SET_FILTER_SUCCESS: undefined,\n\n  RESET_FILTER_REQUEST: undefined,\n  RESET_FILTER_SUCCESS: undefined,\n\n  APPLY_FILTER_DATA_REQUEST: undefined,\n  APPLY_FILTER_DATA_SUCCESS: undefined,\n  APPLY_FILTER_DATA_FAILURE: undefined,\n\n  GENERATE_PDF_REQUEST: undefined,\n  GENERATE_PDF_SUCCESS: undefined,\n  GENERATE_PDF_FAILURE: undefined,\n});\n\nconst reducer = handleActions(\n  new Map([\n    [actions.openAgeFilter, handlers.openAgeFilter],\n    [actions.disableAgeButton, handlers.disableAgeButton],\n\n    [actions.openSexFilter, handlers.openSexFilter],\n    [actions.disableSexButton, handlers.disableSexButton],\n\n    [actions.openDiagnosisFilter, handlers.openDiagnosisFilter],\n    [actions.disableDiagnosisButton, handlers.disableDiagnosisButton],\n\n    [actions.setFilterRequest, handlers.setFilterRequest],\n    [actions.setFilterSuccess, handlers.setFilterSuccess],\n\n    [actions.resetFilterRequest, handlers.resetFilterRequest],\n    [actions.resetFilterSuccess, handlers.resetFilterSuccess],\n\n    [actions.applyFilterDataRequest, handlers.applyFilterDataRequest],\n    [actions.applyFilterDataSuccess, handlers.applyFilterDataSuccess],\n    [actions.applyFilterDataFailure, handlers.applyFilterDataFailure],\n\n    [actions.generatePdfRequest, handlers.generatePdfRequest],\n    [actions.generatePdfSuccess, handlers.generatePdfSuccess],\n    [actions.generatePdfFailure, handlers.generatePdfFailure],\n  ]),\n  initialState\n);\n\nexport default reducer;\n","const initialState = {\n  industry: null,\n  industries: null,\n  industriesLoading: false,\n  industriesError: \"\",\n\n  group: null,\n  groups: null,\n  groupsLoading: false,\n  groupsError: \"\",\n};\n\nexport const getIndustriesRequest = (state) => ({\n  ...state,\n  industriesError: initialState.industriesError,\n  industriesLoading: true,\n});\n\nexport const getIndustriesSuccess = (state, { payload }) => ({\n  ...state,\n  industries: payload.result.industryGroup,\n  industriesLoading: false,\n});\n\nexport const getIndustriesFailure = (state, { payload }) => ({\n  ...state,\n  industriesError: payload,\n  industriesLoading: false,\n});\n\nexport const getGroupsRequest = (state) => ({\n  ...state,\n  filtersError: initialState.filtersError,\n  filtersLoading: true,\n});\n\nexport const getGroupsSuccess = (state, { payload }) => ({\n  ...state,\n  groups: payload.result,\n  groupsLoading: false,\n});\n\nexport const getGroupsFailure = (state, { payload }) => ({\n  ...state,\n  groupsError: payload,\n  groupsLoading: false,\n});\n\nexport const setIndustry = (state, { payload }) => ({\n  ...state,\n  industry: payload,\n});\n\nexport const setGroup = (state, { payload }) => ({\n  ...state,\n  group: payload,\n});\n\nexport default initialState;\n","import { handleActions, createActions } from \"redux-actions\";\n\nimport initialState, * as handlers from \"./handlers\";\n\nexport const actions = createActions({\n  GET_INDUSTRIES_REQUEST: undefined,\n  GET_INDUSTRIES_SUCCESS: undefined,\n  GET_INDUSTRIES_FAILURE: undefined,\n\n  GET_GROUPS_REQUEST: undefined,\n  GET_GROUPS_SUCCESS: undefined,\n  GET_GROUPS_FAILURE: undefined,\n\n  SET_INDUSTRY: undefined,\n  SET_GROUP: undefined,\n});\n\nconst reducer = handleActions(\n  new Map([\n    [actions.getIndustriesRequest, handlers.getIndustriesRequest],\n    [actions.getIndustriesSuccess, handlers.getIndustriesSuccess],\n    [actions.getIndustriesFailure, handlers.getIndustriesFailure],\n\n    [actions.getGroupsRequest, handlers.getGroupsRequest],\n    [actions.getGroupsSuccess, handlers.getGroupsSuccess],\n    [actions.getGroupsFailure, handlers.getGroupsFailure],\n\n    [actions.setIndustry, handlers.setIndustry],\n    [actions.setGroup, handlers.setGroup],\n  ]),\n  initialState\n);\n\nexport default reducer;\n","import React from 'react';\nimport './style.css'\n\nconst numStyle = {\n    color: \"white\",\n}\n\nconst NewLegend = ({arr}) => {\n    let newArr;\n    const getStyle = () => {\n        const keys = Object.keys(arr)\n        keys.sort((a, b) => a - b);\n        newArr = keys.map((item, i) =>\n            <div key={item} className='colorBox' style={{\n                \"backgroundColor\": `${arr[item]}`\n            }}>\n                {(i === 0 || i === keys.length - 1)\n                && <span className='legendeNum' style={i !== 0 ? numStyle : {float: \"right\"}}>{keys[i]}</span>}\n            </div>\n        )\n    }\n    getStyle();\n    return (\n        <div className='wrapp'>\n            <div>\n                <span className='title'>Gesamtkrankenstand</span>\n                <div className='colorWrapp'>\n                    {newArr.map(item => item)}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NewLegend;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GeoJSON, MapContainer } from \"react-leaflet\";\n// import germanyDis from \"../../../../../assets/map/goverment.geo.json\";\nimport germanyDis from \"../../../../../assets/map/areas.geo.json\";\nimport NewLegend from \"../Legend/NewLabel\";\nimport \"./style.css\";\n// import \"leaflet/dist/leaflet.css\";\nimport { Select } from \"antd\";\n\nimport { actions as mainPageActions } from \"../../../../../redux/mainPage\";\n\nconst { Option } = Select;\n\nconst gradient = {\n  \"3.0\": \"#D9F5FB\",\n  3.25: \"#AAE5FA\",\n  3.5: \"#64CDF8\",\n  3.75: \"#3AC0F7\",\n  4: \"#00AEF5\",\n  4.25: \"#009DF4\",\n  4.5: \"#008DEF\",\n  4.75: \"#007FD7\",\n  5: \"#0071BF\",\n  5.25: \"#0063AB\",\n  5.5: \"#005797\",\n  5.75: \"#174C84\",\n  6.5: \"#283D6C\",\n};\n\n// const testArr = [\n//   \"3.0\",\n//   \"3.25\",\n//   \"3.5\",\n//   \"3.75\",\n//   \"4\",\n//   \"4.25\",\n//   \"4.5\",\n//   \"5\",\n//   \"5.25\",\n//   \"5.5\",\n//   \"5.75\",\n//   \"6.5\",\n// ];\n\nconst areaArray = {\n  \"Aachen Städte\": \"Aachen\",\n  \"Bonn Städte\": \"Bonn\",\n  \"Duisburg Städte\": \"Duisburg\",\n  Düren: \"Düren-Jülich\",\n  \"Düsseldorf Städte\": \"Düsseldorf\",\n  \"Essen Städte\": \"Essen\",\n  Euskirchen: \"Euskirchen\",\n  \"Hamburg Städte\": \"Hamburg\",\n  Heinsberg: \"Heinsberg\",\n  \"Krefeld Städte\": \"Krefeld\",\n  Aachen: \"Kreis Aachen\",\n  Cleves: \"Kreis Kleve\",\n  Wesel: \"Kreis Wesel\",\n  \"Cologne Städte\": \"Köln\",\n  \"Leverkusen Städte\": \"Leverkusen\",\n  Mettmann: \"Mettmann\",\n  \"Mönchengladbach Städte\": \"Mönchengladbach\",\n  \"Mülheim Städte\": \"Mülheim\",\n  \"Rhein-Kreis Neuss\": \"Neuss\",\n  \"Oberbergischer Kreis\": \"Oberberg\",\n  \"Oberhausen Städte\": \"Oberhausen\",\n  \"Remscheid Städte\": \"Remscheid\",\n  \"Rheinisch-Bergischer Kreis\": \"Rhein-Berg-Kreis\",\n  \"Rhein-Erft-Kreis\": \"Rhein-Erft-Kreis\",\n  \"Rhein-Sieg\": \"Rhein-Sieg-Kreis\",\n  \"Rheinland/HH\": \"Rheinland/HH\",\n  Viersen: \"Viersen\",\n  \"Wuppertal Städte\": \"Wuppertal\",\n  \"Solingen Städte\": \"Solingen\",\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst Map = (props) => {\n  const dispatch = useDispatch();\n\n  const geoJson = useRef();\n\n  const [selectedFeature, setSelectedFeature] = useState(null);\n  const previousFeature = usePrevious(selectedFeature);\n  const colors = useSelector((state) => state.mainPage.colors);\n\n  const { areas, selectedArea } = props;\n\n  useEffect(() => {\n    if (geoJson && geoJson.current) {\n      setArea(selectedArea);\n    }\n\n    //eslint-disable-next-line\n  }, [geoJson, geoJson.current]);\n\n  useEffect(() => {\n    if (previousFeature) {\n      previousFeature.setStyle({ color: \"grey\", weight: 1 });\n      previousFeature.closePopup();\n    }\n    //eslint-disable-next-line\n  }, [selectedFeature]);\n\n  const setArea = (currentArea) => {\n    dispatch(mainPageActions.setAreaRequest(currentArea));\n\n    if (!currentArea) return;\n\n    const layer = geoJson.current.getLayers().find((layer) => {\n      return layer._popup && layer._popup._content === currentArea;\n    });\n\n    if (layer) {\n      layer.setStyle({ color: \"black\", weight: 1.5 });\n\n      layer.bringToFront();\n\n      layer.openPopup();\n    }\n    setSelectedFeature(layer);\n  };\n\n  const getCenter = () => {\n    return [52.0, 8.445908224487948];\n  };\n\n  const getZoom = () => {\n    return 7;\n  };\n\n  const onEachArea = (area, layer) => {\n    layer.options.color = \"transparent\";\n    layer.options.fillColor = \"transparent\";\n\n    const areaName = areaArray[area.properties.NAME_3];\n\n    const isValidArea = Object.getOwnPropertyNames(colors).some(\n      (val) => val === areaName\n    );\n\n    if (isValidArea) {\n      layer.bindPopup(areaName);\n\n      layer.on({\n        click: (event) => {\n          event.target.setStyle({\n            color: \"black\",\n            weight: 1.5,\n          });\n          event.target.bringToFront();\n\n          setSelectedFeature(event.target);\n\n          dispatch(mainPageActions.setAreaRequest(areaName));\n        },\n      });\n\n      area.properties.testN = colors[areaName];\n      layer.options.fillColor =\n        gradient[area.properties.testN === 3 ? \"3.0\" : area.properties.testN];\n      layer.options.color = \"#5B839B\";\n    }\n  };\n\n  const setColor = () => {\n    return {\n      fillColor: \"#F2F3F4\",\n      fillOpacity: 1,\n      weight: 1,\n    };\n  };\n\n  const areaList =\n    areas &&\n    areas.map((area) => {\n      return (\n        <Option key={area.id} value={area.area}>\n          {area.area}\n        </Option>\n      );\n    });\n\n  return (\n    <div className=\"Map\">\n      <Select\n        onChange={setArea}\n        size={\"large\"}\n        className=\"Map-areaSelector\"\n        value={selectedArea}\n      >\n        {areaList}\n      </Select>\n      {colors && geoJson && (\n        <MapContainer center={getCenter()} zoom={getZoom()}>\n          <>\n            <GeoJSON\n              ref={geoJson}\n              style={setColor}\n              data={germanyDis}\n              onEachFeature={onEachArea}\n            />\n            <NewLegend arr={gradient} />\n          </>\n        </MapContainer>\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n","import DataSet from \"@antv/data-set\";\n\nconst parseChartData = (data) => {\n  return data.map((item) => {\n    if (item.value[\"Gesamt\"]) {\n      return { year: item.year, value: item.value[\"Gesamt\"] };\n    }\n\n    if (item.value[\"Männlich\"] && item.value[\"Weiblich\"]) {\n      return {\n        year: item.year,\n        menValue: item.value[\"Männlich\"],\n        womenValue: item.value[\"Weiblich\"],\n      };\n    }\n\n    if (item.value[\"Männlich\"]) {\n      return { year: item.year, menValue: item.value[\"Männlich\"] };\n    }\n\n    if (item.value[\"Weiblich\"]) {\n      return { year: item.year, womenValue: item.value[\"Weiblich\"] };\n    }\n  });\n};\n\nexport const getData = (data) => {\n  const dv = new DataSet.View().source(parseChartData(data));\n  dv.transform({\n    type: \"fold\",\n    fields: [\"value\", \"menValue\", \"womenValue\"],\n    key: \"city\",\n    value: \"temperature\",\n  });\n  return dv.rows;\n};\n\nexport const scale = [\n  {\n    dataKey: \"year\",\n    // range: [0, 0.95]\n  },\n];\n","import { Chart, Tooltip, Line } from \"viser-react\";\nimport React from \"react\";\nimport { getData, scale } from \"./config\";\nimport \"./style.css\";\n\nconst BaseLineChart = ({ data }) => {\n  return (\n    <Chart padding={0} forceFit height={40} data={getData(data)} scale={scale}>\n      <Tooltip />\n      <Line position=\"year*temperature\" color=\"city\" />\n    </Chart>\n  );\n};\n\nexport default BaseLineChart;\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport \"../filterBlock/style.css\";\nimport BaseLineChart from \"../charts/BaseLineChart\";\n\nconst TableCard = ({ tableTitle, chartData }) => {\n  const tableUI = (sex) => (\n    <ul className=\"values-list\">\n      {chartData.map((item) => {\n        return <li key={item.id}>{Math.round(item.value[sex])}</li>;\n      })}\n    </ul>\n  );\n\n  const lineCharts = () => {\n    if (chartData[0].value[\"Gesamt\"]) {\n      return tableUI(\"Gesamt\");\n    }\n    if (chartData[0].value[\"Männlich\"] && chartData[0].value[\"Weiblich\"]) {\n      return (\n        <>\n          <>{tableUI(\"Männlich\")}</>\n          <>{tableUI(\"Weiblich\")}</>\n        </>\n      );\n    }\n    if (chartData[0].value[\"Männlich\"]) {\n      return tableUI(\"Männlich\");\n    }\n\n    if (chartData[0].value[\"Weiblich\"]) {\n      return tableUI(\"Weiblich\");\n    }\n  };\n\n  const sexLabels = () => {\n    if (chartData[0].value[\"Männlich\"] && chartData[0].value[\"Weiblich\"]) {\n      return (\n        <ul className=\"itemBody-markers\">\n          <li>M</li>\n          <li>F</li>\n        </ul>\n      );\n    }\n\n    if (chartData[0].value[\"Männlich\"]) {\n      return (\n        <ul className=\"itemBody-markers\">\n          <li>M</li>\n        </ul>\n      );\n    }\n\n    if (chartData[0].value[\"Weiblich\"]) {\n      return (\n        <ul className=\"itemBody-markers\">\n          <li>F</li>\n        </ul>\n      );\n    }\n  };\n\n  const yearList = chartData.map((item) => {\n    return <li key={item.id}>{item.year}</li>;\n  });\n\n  return (\n    <Card className=\"FilterBlock-item\">\n      <div className=\"FilterBlock-itemHeader\">\n        <p>{tableTitle}</p>\n        <ul className=\"itemHeader-period\">{yearList}</ul>\n      </div>\n      <div className=\"FilterBlock-itemBody\">\n        <div className=\"Item-chart\">\n          <BaseLineChart data={chartData} />\n        </div>\n        {sexLabels()}\n        <div className=\"itemBody-values\">{lineCharts()}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default TableCard;\n","import React from \"react\";\nimport './style.css'\n\n\n\nconst Checkbox = ({checked, isChecked, label, withLine, id, setWomenFilter, isSexFilterOpen}) => {\n    const isCheckboxChecked = (e) => {\n        isChecked(id, e.currentTarget.checked)\n    }\n\n    const isFilterChosen = (e) => {\n        if (isSexFilterOpen) {\n            if (e.currentTarget.value === 'Frauen (F)') {\n                setWomenFilter(e.currentTarget.checked ? e.currentTarget.value : 'Manner (M)');\n            }\n        } else return null;\n    }\n\n    const bottomLine = withLine && checked ? \"containerWithLine\" : \"\";\n\n    return (\n        <label className={`Checkbox-container ${bottomLine}`}>\n            <input type=\"checkbox\"\n                   onClick={isFilterChosen}\n                   checked={checked} onChange={isCheckboxChecked} value={label}/>\n            <span className=\"Checkbox-checkmark\"/><span> {label}</span>\n        </label>\n    )\n}\n\nexport default Checkbox;","import React from \"react\";\nimport { Button } from \"antd\";\nimport TableCard from \"../TableCard/TableCard\";\nimport { DownloadOutlined, FilterOutlined } from \"@ant-design/icons\";\nimport Checkbox from \"../../../checkbox/Checkbox\";\nimport \"./style.css\";\n\nconst FilterButton = (props) => {\n  const {\n    buttonStyle,\n    isButtonDisabled,\n    setFilterOpen,\n    buttonName,\n    isFilterOpen,\n    applyFilter,\n    clearFilter,\n    filterId,\n    filterButtons,\n    i,\n    setCheckedCheckbox,\n    setWomenFilter,\n    isSexFilterOpen,\n  } = props;\n\n  const filterList =\n    filterButtons &&\n    filterButtons[i].options.map((item) => {\n      return (\n        <Checkbox\n          id={item.id}\n          key={item.id}\n          label={item.filter}\n          checked={item.checked}\n          isChecked={setCheckedCheckbox}\n          setWomenFilter={setWomenFilter}\n          isSexFilterOpen={isSexFilterOpen}\n        />\n      );\n    });\n\n  return (\n    <div className=\"item\">\n      <Button\n        className={buttonStyle}\n        disabled={isButtonDisabled}\n        onClick={setFilterOpen}\n        size=\"large\"\n        icon={<FilterOutlined />}\n      >\n        {buttonName}\n      </Button>\n      {isFilterOpen ? (\n        <div className=\"item-filterList\">\n          {filterList}\n          <Button\n            onClick={applyFilter}\n            className=\"item-applyFilterButton\"\n            size=\"middle\"\n          >\n            Anwenden\n          </Button>\n          <Button\n            onClick={() => clearFilter(filterId)}\n            className=\"item-removeFilterButton\"\n            size=\"middle\"\n          >\n            Filter löschen\n          </Button>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default FilterButton;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://j341921.servers.jiffybox.net\";\n\nconst http = axios.create({\n  baseURL: `${baseUrl}/api/data`,\n});\n\nexport default http;\n","import http from \"./index\";\nimport axios from \"axios\";\n\nexport const getFilters = () =>\n  http.get(\"/filters/getFilters\").then((res) => res.data);\n\nexport const getDiagrams = () =>\n  http.get(\"/diagrams/getDiagramsData\").then((res) => res.data);\n\nexport const getGraph = () =>\n  http.get(\"/graph/getGraphData\").then((res) => res.data);\n\nexport const getFilteredGraph = (data) =>\n  http.post(\"/graph/getFilteredGraphData\", data).then((res) => res.data);\n\nexport const getIndustryGroup = () =>\n  http.get(\"/filters/getFiltersIndustries\").then((res) => res.data);\n\nexport const getFilteredIndustries = (data) =>\n  http\n    .post(\"/industries/getFilteredIndustriesData\", data)\n    .then((res) => res.data);\n\nexport const getMapColors = () =>\n  http.get(\"/map/getRegionsToMap\").then((res) => res.data);\n\nexport const generatePdfFromUrl = (data) =>\n  axios({\n    method: \"post\",\n    url:\n      \"https://j341921.servers.jiffybox.net/node/generate-pdf-from-url\",\n    data: {\n      url: `https://j341921.servers.jiffybox.net${data}`,\n    },\n    responseType: \"blob\",\n  });\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"antd\";\nimport TableCard from \"../TableCard/TableCard\";\nimport { DownloadOutlined } from \"@ant-design/icons\";\nimport FilterButton from \"./FilterButton\";\n\nimport { actions as filterPageActions } from \"../../../../redux/filterPage\";\n\nimport { generatePdfFromUrl } from \"../../../../api/filters\";\n\nimport \"./style.css\";\n\nconst FilterBlock = ({ lineChartsData, location }) => {\n  const dispatch = useDispatch();\n\n  const url = window && `${window.location.pathname}${window.location.search}`;\n\n  const selectedArea = useSelector((state) => state.mainPage.selectedArea);\n  const filterButtons = useSelector((state) => state.filterPage.filterButtons);\n\n  const industry = useSelector((state) => state.industryPage.industry);\n\n  const group = useSelector((state) => state.industryPage.group);\n\n  const isFilterPage = location && location.pathname === \"/filterPage\";\n\n  const isAgeFilterOpen = useSelector(\n    (state) => state.filterPage.isAgeFilterOpen\n  );\n  const isAgeButtonStyled = useSelector(\n    (state) => state.filterPage.isAgeButtonStyled\n  );\n  const isAgeButtonDisabled = useSelector(\n    (state) => state.filterPage.isAgeButtonDisabled\n  );\n\n  const isSexFilterOpen = useSelector(\n    (state) => state.filterPage.isSexFilterOpen\n  );\n  const isSexButtonStyled = useSelector(\n    (state) => state.filterPage.isSexButtonStyled\n  );\n  const isSexButtonDisabled = useSelector(\n    (state) => state.filterPage.isSexButtonDisabled\n  );\n\n  const isDiagnosisFilterOpen = useSelector(\n    (state) => state.filterPage.isDiagnosisFilterOpen\n  );\n  const isDiagnosisButtonStyled = useSelector(\n    (state) => state.filterPage.isDiagnosisButtonStyled\n  );\n  const isDiagnosisButtonDisabled = useSelector(\n    (state) => state.filterPage.isDiagnosisButtonDisabled\n  );\n\n  const openFilter = (isFilterOpen, action) => {\n    if (!isFilterOpen) {\n      action({ openFilter: true, buttonStyled: true });\n    } else {\n      action({ openFilter: false, buttonStyled: false });\n    }\n  };\n\n  const setAgeFilterOpen = () => {\n    openFilter(isAgeFilterOpen, (data) =>\n      dispatch(filterPageActions.openAgeFilter(data))\n    );\n    if (!isAgeFilterOpen) {\n      dispatch(filterPageActions.disableDiagnosisButton(true));\n      dispatch(filterPageActions.disableSexButton(true));\n    } else {\n      dispatch(filterPageActions.disableDiagnosisButton(false));\n      dispatch(filterPageActions.disableSexButton(false));\n    }\n  };\n\n  const setSexFilterOpen = () => {\n    openFilter(isSexFilterOpen, (data) =>\n      dispatch(filterPageActions.openSexFilter(data))\n    );\n    if (!isSexFilterOpen) {\n      dispatch(filterPageActions.disableDiagnosisButton(true));\n      dispatch(filterPageActions.disableAgeButton(true));\n    } else {\n      dispatch(filterPageActions.disableDiagnosisButton(false));\n      dispatch(filterPageActions.disableAgeButton(false));\n    }\n  };\n\n  const setDiagnosisFilterOpen = () => {\n    openFilter(isDiagnosisFilterOpen, (data) =>\n      dispatch(filterPageActions.openDiagnosisFilter(data))\n    );\n    if (!isDiagnosisFilterOpen) {\n      dispatch(filterPageActions.disableSexButton(true));\n      dispatch(filterPageActions.disableAgeButton(true));\n    } else {\n      dispatch(filterPageActions.disableSexButton(false));\n      dispatch(filterPageActions.disableAgeButton(false));\n    }\n  };\n\n  const setCheckedCheckbox = (filterId, checked) => {\n    dispatch(filterPageActions.setFilterRequest({ filterId, checked }));\n  };\n\n  const applyFilter = () => {\n    dispatch(filterPageActions.disableSexButton(false));\n    dispatch(filterPageActions.disableAgeButton(false));\n    dispatch(filterPageActions.disableDiagnosisButton(false));\n    dispatch(filterPageActions.openAgeFilter(false));\n    dispatch(filterPageActions.openSexFilter(false));\n    dispatch(filterPageActions.openDiagnosisFilter(false));\n\n    dispatch(filterPageActions.applyFilterDataRequest());\n  };\n\n  const clearFilter = (filterId) => {\n    dispatch(filterPageActions.resetFilterRequest(filterId));\n\n    dispatch(filterPageActions.disableSexButton(false));\n    dispatch(filterPageActions.disableAgeButton(false));\n    dispatch(filterPageActions.disableDiagnosisButton(false));\n\n    dispatch(filterPageActions.openAgeFilter(false));\n    dispatch(filterPageActions.openSexFilter(false));\n    dispatch(filterPageActions.openDiagnosisFilter(false));\n\n    dispatch(filterPageActions.applyFilterDataRequest());\n  };\n\n  const generatePdf = (url) => {\n    generatePdfFromUrl(url).then((response) => {\n      let url = window.URL.createObjectURL(response.data);\n      let a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"data.pdf\";\n      a.click();\n    });\n  };\n\n  const tableList =\n    lineChartsData &&\n    lineChartsData.map((item) => {\n      return (\n        <TableCard\n          key={item.id}\n          tableTitle={item.title}\n          chartData={item.chartData}\n        />\n      );\n    });\n\n  const filterConfig = [\n    {\n      buttonStyle: isAgeButtonStyled ? \"active\" : \"\",\n      isButtonDisabled: isAgeButtonDisabled,\n      setFilterOpen: setAgeFilterOpen,\n      buttonName: \"Altersgruppe\",\n      isFilterOpen: isAgeFilterOpen,\n      filterId: \"1\",\n      i: 0,\n    },\n    {\n      buttonStyle: isSexButtonStyled ? \"active\" : \"\",\n      isButtonDisabled: isSexButtonDisabled,\n      setFilterOpen: setSexFilterOpen,\n      buttonName: \"Geschlecht\",\n      isFilterOpen: isSexFilterOpen,\n      filterId: \"2\",\n      i: 1,\n    },\n    {\n      buttonStyle: isDiagnosisButtonStyled ? \"active\" : \"\",\n      isButtonDisabled: isDiagnosisButtonDisabled,\n      setFilterOpen: setDiagnosisFilterOpen,\n      buttonName: \"Diagnose\",\n      isFilterOpen: isDiagnosisFilterOpen,\n      filterId: \"3\",\n      i: 2,\n    },\n  ];\n\n  const filterButtonList = filterConfig.map((filterButton) => (\n    <FilterButton\n      key={filterButton.buttonName}\n      buttonStyle={filterButton.buttonStyle}\n      isButtonDisabled={filterButton.isButtonDisabled}\n      setFilterOpen={filterButton.setFilterOpen}\n      buttonName={filterButton.buttonName}\n      isFilterOpen={filterButton.isFilterOpen}\n      applyFilter={applyFilter}\n      clearFilter={clearFilter}\n      filterId={filterButton.filterId}\n      filterButtons={filterButtons}\n      i={filterButton.i}\n      setCheckedCheckbox={setCheckedCheckbox}\n      isSexFilterOpen={isSexFilterOpen}\n    />\n  ));\n\n  return (\n    <div className=\"FilterBlock\">\n      <div className=\"FilterBlock-areaAndPeriodBlock\">\n        {isFilterPage ? (\n          <p>{selectedArea}</p>\n        ) : (\n          <>\n            <p>\n              {industry} / {group}\n            </p>\n            {industry && group ? null : (\n              <p className=\"FilterBlock-notification\">\n                Bitte wählen sie eine Branchegruppe und Branche aus\n              </p>\n            )}\n          </>\n        )}\n      </div>\n      <div className=\"FilterBlock-filterButtons\">\n        {filterButtonList}\n\n        <div className=\"item-download\">\n          <Button\n            onClick={() => generatePdf(url)}\n            size=\"large\"\n            icon={<DownloadOutlined />}\n          />\n        </div>\n      </div>\n\n      {isFilterPage ? (\n        <div className=\"FilterBlock-dataBlock\">{tableList}</div>\n      ) : (\n        industry && <div className=\"FilterBlock-dataBlock\">{tableList}</div>\n      )}\n    </div>\n  );\n};\n\nexport default FilterBlock;\n","import DataSet from '@antv/data-set';\n\nexport const data = [{\n    country: 'Atemwege',\n    litres: 22\n}, {\n    country: 'Muskel/Skelett',\n    litres: 16\n}, {\n    country: 'Verdauung',\n    litres: 9\n}, {\n    country: 'Psychische Storungen',\n    litres: 6\n}, {\n    country: 'Infektionen',\n    litres: 10\n}, {\n    country: 'Nerven und Sinne',\n    litres: 5\n}, {\n    country: 'Sonstiges',\n    litres: 32\n}];\n\nexport const ds = new DataSet();\nexport const dv = ds.createView().source(data).transform({\n    type: 'percent',\n    field: 'litres',\n    dimension: 'country',\n    as: 'percent'\n});","import { Chart, Tooltip, Legend, Coord, StackInterval } from \"viser-react\";\nimport React from \"react\";\nimport { dv } from \"./config\";\nimport \"./style.css\";\n\nclass CircleChartWithLegend extends React.Component {\n  itemTpl = (value, color, checked, index) => {\n    const obj = dv.rows[index];\n    const percent = (obj.percent * 100).toFixed(2) + \"%\";\n    checked = checked ? \"checked\" : \"unChecked\";\n    return (\n      `<li class=\"g2-legend-list-item item-` +\n      index +\n      ` ` +\n      checked +\n      `\" data-value=\"` +\n      value +\n      `\" data-color=` +\n      color +\n      ` >` +\n      `<span style=\"width:140px;\">` +\n      `<i class=\"g2-legend-marker\" style=\"width:10px;height:10px;display:inline-block;margin-right:10px;background-color:` +\n      color +\n      `;\"></i>` +\n      `<span class=\"g2-legend-text\" style=\"color: #666\">` +\n      value +\n      ` ` +\n      `</span></span>` +\n      `<span style=\"text-align: right; font-weight: bold; font-size: 10px; color: #000\">` +\n      percent +\n      `</span></li>`\n    );\n  };\n\n  render() {\n    return (\n      <Chart\n        width={200}\n        height={200}\n        padding={20}\n        data={dv}\n        scale={[\n          {\n            dataKey: \"percent\",\n            formatter: function formatter(val) {\n              val = (val * 100).toFixed(0) + \"%\";\n              return val;\n            },\n            nice: false,\n          },\n        ]}\n        filter={{\n          dataKey: \"country\",\n          callback: function (val) {\n            return val !== \"UK\";\n          },\n        }}\n      >\n        <Coord type=\"theta\" innerRadius={0.75} radius={1} />\n        <Tooltip\n          clickable={false}\n          showTitle={false}\n          containerTpl={`<div class=\"g2-tooltip\"><ul class=\"g2-tooltip-list\"></ul></div>`}\n          itemTpl={\n            '<li data-index={index}><span style=\"color:{color}\">{name}:</span>{value}</li>'\n          }\n        />\n        <Legend\n          clickable={false}\n          useHtml={true}\n          position=\"right\"\n          reactive={true}\n          containerTpl={`<div class=\"g2-legend\"><ul class=\"g2-legend-list\"></ul></div>`}\n          itemTpl={this.itemTpl}\n        />\n        <StackInterval\n          position=\"percent\"\n          color={[\n            \"country\",\n            [\n              \"#2471A3\",\n              \"#3498DB\",\n              \"#5DADE2\",\n              \"#85C1E9\",\n              \"#AED6F1\",\n              \"#BFC9CA\",\n              \"#EBF5FB\",\n            ],\n          ]}\n        />\n      </Chart>\n    );\n  }\n}\n\nexport default CircleChartWithLegend;\n","import { Chart, Tooltip, Axis, Line } from \"viser-react\";\nimport * as React from \"react\";\n\nimport DataSet from \"@antv/data-set\";\n\nexport const scale = [\n  {\n    dataKey: \"value\",\n    // min: 13,\n    // max: 15,\n  },\n];\n\nconst LineChart = ({ data }) => {\n  const dv = new DataSet.View().source(data);\n  return (\n    <div style={{ marginTop: 10 }}>\n      <Chart forceFit height={200} data={dv.rows} scale={scale} padding={30}>\n        <Tooltip />\n        <Axis dataKey=\"value\" show={false} />\n        <Line position=\"year*value\" color=\"#1E8449\" size=\"3\" />\n      </Chart>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport \"./style.css\";\nimport { Card } from \"antd\";\nimport { CaretUpOutlined, CaretDownOutlined } from \"@ant-design/icons\";\nimport CircleChartWithLegend from \"../charts/CircleChart/ChartWithLegend/CircleChartWithLegend\";\n\nimport LineChart from \"../charts/LineChart/LineChart\";\n\nclass TableBlock extends React.Component {\n  render() {\n    const { selectedArea, lineChartsData } = this.props;\n\n    const lineCharts =\n      lineChartsData &&\n      lineChartsData.map((item) => {\n        const lastValue = Math.round(\n          item.chartData[item.chartData.length - 1].value\n        );\n        const prevValue = Math.round(\n          item.chartData[item.chartData.length - 2].value\n        );\n        const percentage = ((lastValue - prevValue) / prevValue) * 100;\n\n        return (\n          <Card key={item.id} className=\"TableBlock-lineCard\">\n            <p>{item.title}</p>\n            <p className=\"lineCard-lastYear\">{item.currentYear}</p>\n            <div className=\"result-block\">\n              <p className=\"number\">{lastValue}</p>\n              <div className=\"progress-block\">\n                {percentage > 0 ? (\n                  <CaretUpOutlined\n                    style={{ fontSize: \"15px\", color: \"#1E8449\" }}\n                  />\n                ) : (\n                  <CaretDownOutlined\n                    style={{ fontSize: \"15px\", color: \"#CB4335\" }}\n                  />\n                )}\n\n                <span style={{ color: percentage > 0 ? \"#1E8449\" : \"#CB4335\" }}>\n                  {Math.abs(Math.round(percentage)).toFixed(2)} %\n                </span>\n              </div>\n            </div>\n            <LineChart data={item.chartData} />\n          </Card>\n        );\n      });\n\n    return (\n      <div className=\"TableBlock\">\n        <p className=\"TableBlock-selectedArea\">{selectedArea}</p>\n        <div className=\"TableBlock-lineChartsBlock\">{lineCharts}</div>\n        <div className=\"TableBlock-circleChartWithLegendBlock\">\n          <Card className=\"TableBlock-circleChartWithLegend\">\n            <p>Diagnose</p>\n            <CircleChartWithLegend />\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TableBlock;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./style.css\";\nimport { Select } from \"antd\";\n\nimport { actions as industryPageActions } from \"../../../../redux/industryPage\";\n\nconst { Option } = Select;\n\nconst IndustryFilter = () => {\n  const dispatch = useDispatch();\n\n  const industries = useSelector((state) => state.industryPage.industries);\n  const groups = useSelector((state) => state.industryPage.groups);\n\n  const industry = useSelector((state) => state.industryPage.industry);\n  const group = useSelector((state) => state.industryPage.group);\n\n  useEffect(() => {\n    dispatch(industryPageActions.getGroupsRequest(industry));\n  }, [dispatch, industry]);\n\n  const setIndustry = (value) => {\n    dispatch(industryPageActions.setIndustry(value));\n    dispatch(industryPageActions.setGroup(null));\n  };\n\n  const setGroup = (value) => {\n    dispatch(industryPageActions.setGroup(value));\n  };\n\n  const industryList =\n    industries &&\n    industries.map((item, index) => {\n      return (\n        <Option key={index} value={item.industryGroup}>\n          {item.industryGroup}\n        </Option>\n      );\n    });\n\n  const groupList =\n    groups &&\n    groups.map((item, index) => {\n      return (\n        <Option key={index} value={item.industryName}>\n          {item.industryName}\n        </Option>\n      );\n    });\n\n  return (\n    <div className=\"IndustryFilterBlock\">\n      <div className=\"filterBlock\">\n        <Select\n          onChange={setIndustry}\n          placeholder=\"BRANCHENGRUPPE\"\n          size={\"large\"}\n          className=\"IndustryFilterBlock-areaSelector\"\n          value={industry}\n        >\n          {industryList}\n        </Select>\n\n        <Select\n          onChange={setGroup}\n          size={\"large\"}\n          placeholder=\"BRANCHE\"\n          className=\"IndustryFilterBlock-areaSelector\"\n          value={group}\n        >\n          {groupList}\n        </Select>\n      </div>\n    </div>\n  );\n};\n\nexport default IndustryFilter;\n","export default function dataForRequestFilter(arr) {\n  const genderArr = [];\n\n  arr.forEach((item) => {\n    if (item.checked) {\n      genderArr.push(item.filter);\n    }\n  });\n\n  return genderArr;\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { withRouter } from \"react-router\";\nimport Map from \"./mainPage/map/Map/Map\";\n\nimport FilterBlock from \"./filterPage/filterBlock/FilterBlock\";\nimport TableBlock from \"./mainPage/table/TableBlock\";\nimport IndustryFilter from \"./industryPage/industryFilterBlock/industryFilter\";\n\nimport { actions as mainPageActions } from \"../../redux/mainPage\";\n\nimport { actions as filterPageActions } from \"../../redux/filterPage\";\nimport { actions as industryPageActions } from \"../../redux/industryPage\";\n\nimport \"./style.css\";\n\nimport { transformDataForLineCharts } from \"../../utils\";\n\nconst ConditionPage = (props) => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.mainPage.mapData);\n  const selectedArea = useSelector((state) => state.mainPage.selectedArea);\n  const filteredGraph = useSelector((state) => state.mainPage.filteredData);\n\n  const { location } = props;\n\n  const areas =\n    data &&\n    Object.getOwnPropertyNames(data).map((item, index) => {\n      return { id: index, area: item };\n    });\n\n  const area = data && data[selectedArea];\n\n  const transformedData = transformDataForLineCharts(area);\n\n  useEffect(() => {\n    if (location.pathname === \"/filterPage\") {\n      dispatch(filterPageActions.applyFilterDataRequest());\n    }\n  }, [dispatch, location.pathname, selectedArea]);\n\n  // useEffect(() => {\n  //   if (location && location.pathname === \"/industriesPage\") {\n  //     dispatch(filterPageActions.applyFilterDataRequest());\n\n  //     dispatch(industryPageActions.getIndustriesRequest());\n  //   }\n  // }, [dispatch, location]);\n\n  return (\n    <div className=\"DashBoardPage\">\n      {location && location.pathname === \"/industriesPage\" ? (\n        <IndustryFilter />\n      ) : (\n        <Map areas={areas} type={selectedArea} selectedArea={selectedArea} />\n      )}\n\n      {location && location.pathname === \"/\" ? (\n        <TableBlock\n          lineChartsData={transformedData}\n          selectedArea={selectedArea}\n        />\n      ) : (\n        <FilterBlock location={location} lineChartsData={filteredGraph} />\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(ConditionPage);\n","export default function transformDataForLineCharts(obj) {\n  const years = obj && Object.getOwnPropertyNames(obj);\n\n  const kpis = obj && Object.getOwnPropertyNames(Object.values(obj)[0]);\n\n  const arr =\n    kpis &&\n    kpis.map((item, index) => {\n      return {\n        id: index,\n        title: item,\n      };\n    });\n\n  const wholeArray = obj && Object.values(obj);\n\n  return (\n    arr &&\n    arr.map(({ id, title }) => {\n      const newArr = wholeArray.map((item, index) => {\n        return {\n          year: years[index],\n          value: Number(item[title].Gesamt.Gesamt[0]),\n        };\n      });\n\n      return {\n        id,\n        title,\n        currentYear: years[years.length - 1],\n        prevYear: years[years.length - 2],\n        chartData: newArr,\n      };\n    })\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\n\nimport qs from \"query-string\";\n\nimport { Layout } from \"antd\";\n\nimport SiderBlock from \"./sider/SiderBlock\";\n\n// import DashBoardPage from \"./mainPage/DashBoardPage\";\n// import DashBoardPageFilter from \"./filterPage/DashBoardPageFilter\";\n// import DashBoardPageIndustry from \"./industryPage/DashBoardPageIndustry\";\n\nimport { actions as mainPageActions } from \"../../redux/mainPage\";\nimport { actions as filterPageActions } from \"../../redux/filterPage\";\nimport { actions as industryPageActions } from \"../../redux/industryPage\";\n\nimport \"./style.css\";\n\nimport ConditionPage from \"./ConditionPage\";\n\nconst { Content } = Layout;\n\nconst splitString = (arr) => arr.split(\",\");\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const location = useLocation();\n\n  const ageFilter = useSelector((state) => state.filterPage.ageFilter);\n\n  const genderFilter = useSelector((state) => state.filterPage.genderFilter);\n\n  // const diagnoseFilter = useSelector((state) => state.filterPage.diagnoseFilter);\n\n  const selectedArea = useSelector((state) => state.mainPage.selectedArea);\n\n  const filterButtons = useSelector((state) => state.filterPage.filterButtons);\n\n  useEffect(() => {\n    dispatch(mainPageActions.getGraphRequest());\n    dispatch(mainPageActions.getDiagramsRequest());\n    dispatch(mainPageActions.getFiltersRequest());\n    dispatch(mainPageActions.getColorsRequest());\n\n    dispatch(industryPageActions.getIndustriesRequest());\n    //eslint-disable-next-line\n  }, [dispatch]);\n\n  useEffect(() => {\n    const { search } = location;\n    const parsed = qs.parse(search);\n\n    if (parsed.area) {\n      dispatch(mainPageActions.setAreaRequest(parsed.area));\n    }\n\n    if (parsed.age) {\n      const ageArr = splitString(parsed.age);\n\n      filterButtons[0].options.forEach((item) => {\n        if (ageArr.includes(item.filter)) {\n          dispatch(\n            filterPageActions.setFilterRequest({\n              filterId: item.id,\n              checked: true,\n            })\n          );\n        }\n      });\n    } else if (parsed.gender) {\n      const genderArr = splitString(parsed.gender);\n\n      filterButtons[1].options.forEach((item) => {\n        if (genderArr.includes(item.filter)) {\n          dispatch(\n            filterPageActions.setFilterRequest({\n              filterId: item.id,\n              checked: true,\n            })\n          );\n        }\n      });\n    }\n\n    dispatch(filterPageActions.applyFilterDataRequest());\n\n    //eslint-disable-next-line\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (ageFilter.length > 0) {\n      history.push({\n        search: `?area=${selectedArea}&age=${ageFilter}`,\n      });\n    } else if (genderFilter.length > 0) {\n      history.push({\n        search: `?area=${selectedArea}&gender=${genderFilter}`,\n      });\n    } else {\n      history.push({\n        search: `?area=${selectedArea}`,\n      });\n    }\n\n    //eslint-disable-next-line\n  }, [ageFilter, genderFilter, selectedArea, location.pathname]);\n\n  return (\n    <div className=\"MainPage\">\n      <Layout style={{ height: \"100%\" }}>\n        <Layout>\n          <SiderBlock />\n          <Layout style={{ padding: \"0 0\" }}>\n            <Content className=\"MainPage-site-layout-background\">\n              <Switch>\n                <Route exact path=\"/\" component={ConditionPage} />\n                <Route exact path=\"/filterPage\" component={ConditionPage} />\n                <Route exact path=\"/industriesPage\" component={ConditionPage} />\n                <Redirect to=\"/\" />\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport './style.css'\n\nimport MainPage from \"./dashboard/MainPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport {\n  getGraph as getGraphData,\n  getFilteredGraph as getFilteredGraphData,\n  getFilters as getFiltersData,\n  getMapColors,\n  getDiagrams as getDiagramsData,\n} from \"../../api/filters\";\nimport { actions as types } from \"./index\";\n\nfunction* getFilters() {\n  try {\n    const data = yield call(getFiltersData);\n\n    yield put(types.getFiltersSuccess(data));\n  } catch (error) {\n    yield put(types.getFiltersFailure(error));\n  }\n}\n\nfunction* getGraph() {\n  try {\n    const data = yield call(getGraphData);\n\n    yield put(types.getGraphSuccess(data));\n  } catch (error) {\n    yield put(types.getGraphFailure(error));\n  }\n}\n\nfunction* getFilteredGraph({ payload }) {\n  try {\n    const data = yield call(getFilteredGraphData, payload);\n\n    yield put(types.getFilteredGraphSuccess(data));\n  } catch (error) {\n    yield put(types.getFilteredGraphFailure(error));\n  }\n}\n\nfunction* setArea({ payload }) {\n  try {\n    yield put(types.setAreaSuccess(payload));\n  } catch (error) {\n    yield put(types.setAreaFailure(error));\n  }\n}\n\nfunction* getСolors() {\n  try {\n    const data = yield call(getMapColors);\n\n    yield put(types.getColorsSuccess(data));\n  } catch (error) {\n    yield put(types.getColorsFailure(error));\n  }\n}\n\nfunction* getDiagrams() {\n  try {\n    const data = yield call(getDiagramsData);\n\n    yield put(types.getDiagramsSuccess(data));\n  } catch (error) {\n    yield put(types.getDiagramsFailure(error));\n  }\n}\n\nconst mainPageSagas = [\n  takeEvery(types.getFiltersRequest, getFilters),\n  takeEvery(types.getGraphRequest, getGraph),\n  takeEvery(types.getFilteredGraphRequest, getFilteredGraph),\n  takeEvery(types.setAreaRequest, setArea),\n  takeEvery(types.getColorsRequest, getСolors),\n  takeEvery(types.getDiagramsRequest, getDiagrams),\n];\n\nexport default mainPageSagas;\n","import { put, call, select, takeEvery } from \"redux-saga/effects\";\n\nimport { generatePdfFromUrl } from \"../../api/filters\";\n\nimport { dataForRequestFilter } from \"../../utils\";\n\nimport { actions as types } from \"./index\";\n\nimport { actions as mainPageTypes } from \"../mainPage/index\";\n\nconst getFilterButtons = (state) => state.filterPage.filterButtons;\n\nconst getSelectedArea = (state) => state.mainPage.selectedArea;\n\nfunction* setFilter({ payload }) {\n  const filterButtons = yield select(getFilterButtons);\n\n  const newFilterButtons =\n    filterButtons &&\n    filterButtons.map((y) => {\n      return {\n        ...y,\n        options: y.options.map((option) => {\n          if (option.id === payload.filterId) {\n            return { ...option, checked: payload.checked };\n          } else {\n            return option;\n          }\n        }),\n      };\n    });\n\n  yield put(types.setFilterSuccess(newFilterButtons));\n}\n\nfunction* resetFilter({ payload }) {\n  const filterButtons = yield select(getFilterButtons);\n\n  const newFilterButtons =\n    filterButtons &&\n    filterButtons.map((y) => {\n      if (payload === y.id)\n        return {\n          ...y,\n          options: y.options.map((option) => ({ ...option, checked: false })),\n        };\n      return y;\n    });\n\n  yield put(types.resetFilterSuccess(newFilterButtons));\n}\n\nfunction* applyFilterData() {\n  try {\n    const selectedArea = yield select(getSelectedArea);\n\n    const filterButtons = yield select(getFilterButtons);\n\n    const genderArr = yield call(\n      dataForRequestFilter,\n      filterButtons[1].options\n    );\n\n    const ageArr = yield call(dataForRequestFilter, filterButtons[0].options);\n\n    const diagnosesArr = yield call(\n      dataForRequestFilter,\n      filterButtons[2].options\n    );\n\n    if (ageArr.length) {\n      yield put(types.disableSexButton(true));\n      yield put(types.disableDiagnosisButton(true));\n    }\n\n    if (genderArr.length) {\n      yield put(types.disableAgeButton(true));\n      yield put(types.disableDiagnosisButton(true));\n    }\n\n    if (diagnosesArr.length) {\n      yield put(types.disableAgeButton(true));\n      yield put(types.disableSexButton(true));\n    }\n\n    const basicObject = yield {\n      filters: {\n        region: {\n          values: [selectedArea],\n        },\n        ageRange: {\n          values: ageArr,\n        },\n        gender: {\n          values: genderArr,\n        },\n        detail: {\n          values: [\n            \"AU-Fälle je 100 VJ\",\n            \"AU-Tage je 100 VJ\",\n            \"AU-Dauer je Bescheinigung\",\n            \"Krankenstand Gesamt\",\n          ],\n        },\n      },\n    };\n\n    yield put(mainPageTypes.getFilteredGraphRequest(basicObject));\n\n    yield put(types.applyFilterDataSuccess({ageArr, genderArr}));\n  } catch (error) {\n    yield put(types.applyFilterDataFailure(error));\n  }\n}\n\nfunction* generatePdf({ payload }) {\n  try {\n    yield call(generatePdfFromUrl, payload);\n    yield put(types.generatePdfSuccess());\n  } catch (e) {\n    yield put(types.generatePdfFailure());\n  }\n}\n\nconst filterSagas = [\n  takeEvery(types.setFilterRequest, setFilter),\n  takeEvery(types.resetFilterRequest, resetFilter),\n  takeEvery(types.applyFilterDataRequest, applyFilterData),\n  takeEvery(types.generatePdfRequest, generatePdf),\n];\n\nexport default filterSagas;\n","import { put, call, takeEvery } from \"redux-saga/effects\";\n\nimport { getIndustryGroup, getFilteredIndustries } from \"../../api/filters\";\n\nimport { actions as types } from \"./index\";\n\nfunction* getIndustries() {\n  try {\n    const data = yield call(getIndustryGroup);\n\n    yield put(types.getIndustriesSuccess(data));\n  } catch (error) {\n    yield put(types.getIndustriesFailure(error));\n  }\n}\n\nfunction* getGroups({ payload }) {\n  try {\n    const filterData = yield {\n      filters: {\n        industryGroup: {\n          value: payload,\n        },\n      },\n    };\n\n    const data = yield call(getFilteredIndustries, filterData);\n\n    yield put(types.getGroupsSuccess(data));\n  } catch (error) {\n    yield put(types.getGroupsFailure(error));\n  }\n}\n\nconst industryPageSagas = [\n  takeEvery(types.getIndustriesRequest, getIndustries),\n  takeEvery(types.getGroupsRequest, getGroups),\n];\n\nexport default industryPageSagas;\n","import { all } from \"redux-saga/effects\";\n\nimport mainPageSagas from \"./mainPage/sagas\";\nimport filterPageSagas from \"./filterPage/sagas\";\nimport industryPageSagas from \"./industryPage/sagas\";\n\nexport default function* root() {\n  yield all([...mainPageSagas, ...filterPageSagas, ...industryPageSagas]);\n}\n","import { combineReducers } from \"redux\";\n\nimport mainPage from \"./mainPage\";\nimport filterPage from \"./filterPage\";\nimport industryPage from \"./industryPage\";\n\nconst rootReducer = combineReducers({\n  mainPage,\n  filterPage,\n  industryPage,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst createStoreWithMiddleware = applyMiddleware(sagaMiddleware)(createStore);\n\nexport default function configureStore(initialState) {\n  let store = createStoreWithMiddleware(\n    rootReducer,\n    initialState,\n    composeWithDevTools()\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}